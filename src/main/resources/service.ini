[default]
prevayler.prevalenceBase.mkdirs = true
lucene.path.mkdirs = true

# Great cache reduce the CPU from a large user request
# from several hundred million clock ticks
# down to just a couple of thousand clock ticks.

# In reality, this means that
# if it takes 800ms and 20% CPU to produce results with no cache
# limiting you to a maximum 5 concurrent users,
# and it takes 10 ms and 0.1% CPU with full cache
# then you can handle 400 concurrent users with full cache.

# GeoJSON mapped to assembled JTS instances kept in heap as java objects.
# These objects allows for complex GIS operations.
# They are accessed to filter out matching search results
# and to produce simplified geometries on low zoom levels.
# Full cache contains about 6 500 items and consumes about 70MB of heap RAM.
geometry.cache.jts.size = 100

# GeoJSON mapped to assembled JSON trees kept in heap as Java objects.
# Used to produce search results send to client on high zoom.
# Contains the original GeoJSON associated with search results.
# Full cache contains about 6 500 items and consumes about 10MB of heap RAM.
geometry.cache.geoJson.size = 100

# GeoJSON mapped to assembled JSON trees kept in heap as Java objects.
# Used to produce search results send to client on low zoom.
# There are eight simplified geometries for each possible search result item.
# Full cache contains about 55 000 items and consumes about 70MB of heap RAM.
geometry.cache.simplifiedGeoJson.size = 100


# Searching the index is matching envelopes of polygons.
# This means that results might be outside of the viewport of the user,
# sometimes producing up to 25% hits than necessary.
# This data takes time to transfer and consumes RAM in the client browser.
# In a fully cached environment this will be a very fast operation
# while in a none cached environment it might take up to half a second of CPU time.
# In reality this means some
search.filterOutNonMatchingItems = false

[fully_cached]
geometry.cache.geoJson.size = 100000
geometry.cache.jts.size = 100000
geometry.cache.simplifiedGeoJson.size = 100000
search.filterOutNonMatchingItems = true

[no_cache]
geometry.cache.geoJson.size = 0
geometry.cache.jts.size = 0
geometry.cache.simplifiedGeoJson.size = 0
search.filterOutNonMatchingItems = false

[dev]
lucene.path = target/data/dev/lucene
lucene.path.mkdirs = true
prevayler.prevalenceBase = target/data/dev/prevalence
prevayler.prevalenceBase.mkdirs = true


[prod]
lucene.path = /srv/map.wikilovesearth.se/data/lucene
lucene.path.mkdirs = true
prevayler.prevalenceBase = /srv/map.wikilovesearth.se/data/prevayler
prevayler.prevalenceBase.mkdirs = true

